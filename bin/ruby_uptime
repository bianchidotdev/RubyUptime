#!/usr/bin/env ruby

# TODO: implement service

require 'date'
require 'yaml'

require 'faraday'
require 'semantic_logger'

require_relative '../lib/ruby_uptime'

# TODO: move to networked DB
options = (YAML.load_file '../checks.yaml')

check_options = options['checks']
default_options = options['check_defaults']

# Set defaults
DEFAULT_CHECK_FREQUENCY = default_options['frequency'] || 10
DEFAULT_CHECK_PROTOCOL = default_options['protocol'] || 'https'
DEFAULT_CHECK_ENDPOINT = default_options['endpoint'] || '/testall'


logger = init_logger 'simple_uptime_logger'

checks = create_checks(check_options)

Check.log_header

threads = {}
loop do
  checks.each do |check|
    if check.next_time < Time.now.utc.to_f
      threads[Time.now.utc.to_f] = Thread.new { eval_check check, logger }
    end
    sleep 0.001
  end

  sleep 0.1

  # delete old threads
  threads.each do |time, thread|
    thread.kill if (time < Time.now.utc.to_f - 2)
  end

  threads = threads.select do |_time, thread|
    thread.alive?
  end

  logger.warn("Spawning too many threads - #{threads}") if threads.count > (checks.count * 3)
end
